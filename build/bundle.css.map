{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Tree.svelte",
    "..\\..\\Spinner.svelte",
    "..\\..\\Search.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  /* \r\n  TO-ADD: a clear search function maybe after selecting a link or clicking\r\n  \r\n  IDEA:\r\n  after every subbranch ends and its time to switch back to col-1, add an extra row\r\n  how does adding an extra row per parent branch? it simplifies our equation:\r\n\r\n  (numBranches + numSubbranches) - numParentBranches = numRows\r\n  becomes\r\n  numBranches + numSubbranches = numRows\r\n*/\r\n\r\n  // import flatten from \"flat\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  // explicitly make this an empty string so\r\n  // the label function query.length doesn't\r\n  // error out over an undefined query\r\n  export let query = \"\";\r\n\r\n  let branches, subbranches;\r\n\r\n  // runs after component is loaded into the DOM - could put like, a lot of code in here\r\n  // 1. functionalise code\r\n  // 2. call sensible functions from within onMount (ie not event listeners or globals etc)\r\n  onMount(async () => {\r\n    // 1. fetch json tree file\r\n    // 2. calculate numRows from json.length and my equation\r\n    // 3. use numRows to generate the empty tree in the DOM\r\n    // 4. run createTree() to add correct content to DOM tree\r\n    createTree(tree);\r\n    // query = query.toLowerCase();\r\n\r\n    // get all non-empty branches\r\n    branches = Array.from(document.querySelectorAll(\".c1\")).filter(\r\n      b => b.textContent\r\n    );\r\n\r\n    // get all non-empty subbranches\r\n    subbranches = Array.from(document.querySelectorAll(\".c2\")).filter(\r\n      sb => sb.textContent\r\n    );\r\n  });\r\n\r\n  // start matching from 1 meaningful char (accounts for whitespace)\r\n  $: if (query.length > 2) {\r\n    // console.log(query);\r\n    // sanitise input for branch matching\r\n    query = query.substring(1).toLowerCase();\r\n    for (const branch of branches) {\r\n      if (branch.textContent.includes(query)) {\r\n        styleBranch(branch, null, 1);\r\n        // branch.style.opacity = 1;\r\n      }\r\n    }\r\n\r\n    for (const [i, subbranch] of subbranches.entries()) {\r\n      if (subbranch.textContent.includes(query)) {\r\n        // mutable copy of index to crawl up subbranches\r\n        let ii = i;\r\n\r\n        let crawl = false;\r\n\r\n        // only run subbranch crawl if not currently on first subbranch\r\n        if (!subbranch.previousElementSibling.textContent) {\r\n          // while the cell to my left is empty, iterate up subbranches\r\n          do {\r\n            // if crawl is false then this is the first do loop iteration\r\n            if (crawl) {\r\n              // add styling to not-first-not-query-target-subbranch\r\n              styleBranch(subbranches[ii], \"Left\", 0.5);\r\n            } else {\r\n              // add styling to subbranch target\r\n              styleBranch(subbranches[ii], \"Left\", 1);\r\n            }\r\n\r\n            console.log(ii);\r\n            // iterate up one subbranch\r\n            ii--;\r\n\r\n            // set flag to true\r\n            crawl = true;\r\n\r\n            // if textContent, the previous sibling is the parent branch\r\n          } while (!subbranches[ii].previousElementSibling.textContent);\r\n        } else {\r\n          console.log(\"skipped while loop --> target sb is first sb\");\r\n        }\r\n\r\n        // check if ii is on first subbranch\r\n        // either by while loop iteration or\r\n        // if first subbranch = query target\r\n        if (subbranches[ii].previousElementSibling.textContent) {\r\n          console.log(\r\n            \"first subbranch of:\",\r\n            subbranches[ii].previousElementSibling.textContent\r\n          );\r\n\r\n          // first add styling to first subbranch\r\n          if (crawl) {\r\n            console.log(\"crawl = true\");\r\n            // then first subbranch is not the query target\r\n            styleBranch(subbranches[ii], \"Left\", 0.5);\r\n          } else {\r\n            // crawl was skipped and first subbranch is query target\r\n            styleBranch(subbranch, \"Left\", 1);\r\n          }\r\n          // then style parent branch\r\n          styleBranch(subbranches[ii].previousElementSibling, \"Bottom\", 0.5);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const styleBranch = (branch, edge, opacity) => {\r\n    // construct object from params as JSON\r\n    let styleObj = JSON.parse(\r\n      `{ \"opacity\": ${opacity}, \"border${edge}\": \"2px solid var(--primary-color)\" }`\r\n    );\r\n    // add styles (without overwriting)\r\n    Object.assign(branch.style, styleObj);\r\n  };\r\n\r\n  // add to videos: tidbits, PAVEMENT_2017_AH18, ...\r\n  // 'source' could be called 'root', 'home' ...\r\n  // placeholder tree object\r\n  // translate into generated object-only JSON string\r\n  // only use lower-case to sync with lowercase-sanitised input\r\n  let tree = {\r\n    home: \"path\",\r\n    about: \"path\",\r\n    web: {\r\n      primer_2027: \"https://par-ity.github.io/Primer-2027\",\r\n      platypus: \"https://diathelia.github.io/Platypus\",\r\n      roslyn_health: \"https://diathelia.github.io/heal_thy\"\r\n    },\r\n    video: {\r\n      oh_ivy: \"https://www.youtube.com/watch?v=RJpgCb-XNIU\",\r\n      procedural_disco: \"https://www.youtube.com/watch?v=88DUzNXNxbs\",\r\n      nctrnl: \"https://www.youtube.com/watch?v=6Fxl4-jEOes\"\r\n    },\r\n    loading: {\r\n      spinner_1: \"~*x+-+x*~\",\r\n      spinner_2: \"|/-|/-|/-|\"\r\n    }\r\n  };\r\n\r\n  // 1. set 'branch' to col-1 once, no newline\r\n  // 2. for subbranch length, add elm to col-2, then newline\r\n  // 3. after last subbranch elm, newline and set back to col-1\r\n  const createTree = obj => {\r\n    // counters for columns and rows\r\n    let c = 1;\r\n    let r = 1;\r\n\r\n    for (const branch in obj) {\r\n      // detect a parent branch\r\n      if (typeof obj[branch] == \"object\") {\r\n        // add content\r\n        document.querySelector(`.c${c}.r${r}`).textContent = branch;\r\n        // document.querySelector(`.c${c}.r${r}`).style.borderBottom =\r\n        //   \"2px solid var(--primary-color)\";\r\n        // set to column 2 for subbranches loop\r\n        c = 2;\r\n        // keep first subbranch on same line\r\n        r--;\r\n\r\n        // iterate by key through subbranches\r\n        for (const subbranch in obj[branch]) {\r\n          r++;\r\n          // add border\r\n          // document.querySelector(`.c${c}.r${r}`).style.borderLeft =\r\n          //   \"2px solid var(--primary-color)\";\r\n          // subbranch value may be text or a link\r\n          let value;\r\n\r\n          // detect if value is a link\r\n          if (obj[branch][subbranch].substring(0, 4) === \"http\") {\r\n            // set value to an <a> tag href and use the key as the display text\r\n            value = `<a target=\"_blank\" href=\"${obj[branch][subbranch]}\">${subbranch}</a>`;\r\n          } else {\r\n            // set value to value\r\n            value = obj[branch][subbranch];\r\n          }\r\n\r\n          // console.log(\"value\", obj[branch][subbranch]);\r\n          // console.log(\"key\", subbranch);\r\n\r\n          document.querySelector(`.c${c}.r${r}`).innerHTML = value;\r\n        }\r\n\r\n        // add margin-bump to last subbranch of current branch\r\n        document.querySelector(`.c2.r${r}`).style.marginBottom = \"1rem\";\r\n\r\n        // reset for new branch\r\n        c = 1;\r\n        r++;\r\n      } else {\r\n        document.querySelector(`.c${c}.r${r}`).textContent = branch;\r\n        // reset for new branch\r\n        c = 1;\r\n        r++;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .tree {\r\n    grid-gap: 0;\r\n    grid-template-columns: repeat(2, min-content);\r\n    background-color: var(--bg-color);\r\n    padding: 0 0.5rem;\r\n  }\r\n\r\n  /* branches */\r\n  .tree div {\r\n    padding-left: 0.2rem;\r\n    /* visibility: hidden; */\r\n    opacity: 0.1;\r\n  }\r\n\r\n  .c1 {\r\n    padding-right: 1rem;\r\n  }\r\n</style>\r\n\r\n<div class=\"wrap\">\r\n  <div class=\"tree grid-2\">\r\n    <div class=\"c1 r1\" />\r\n    <div class=\"c2 r1\" />\r\n    <div class=\"c1 r2\" />\r\n    <div class=\"c2 r2\" />\r\n    <div class=\"c1 r3\" />\r\n    <div class=\"c2 r3\" />\r\n    <div class=\"c1 r4\" />\r\n    <div class=\"c2 r4\" />\r\n    <div class=\"c1 r5\" />\r\n    <div class=\"c2 r5\" />\r\n    <div class=\"c1 r6\" />\r\n    <div class=\"c2 r6\" />\r\n    <div class=\"c1 r7\" />\r\n    <div class=\"c2 r7\" />\r\n    <div class=\"c1 r8\" />\r\n    <div class=\"c2 r8\" />\r\n    <div class=\"c1 r9\" />\r\n    <div class=\"c2 r9\" />\r\n    <div class=\"c1 r10\" />\r\n    <div class=\"c2 r10\" />\r\n  </div>\r\n</div>\r\n\r\n<!-- console.log( subbranches[ii].previousElementSibling.previousElementSibling );\r\nthis attempt to stop while looping over aleady visible subbranches just breaks\r\nthe loop when it should run... i think it is targeting the wrong elm... &&\r\nsubbranch.previousElementSibling.previousElementSibling.style .visibility ===\r\n\"hidden\" question.. do i want to stop looping over already lit-up -->\r\n\r\n<!-- // for (let i = 0; i < Object.keys(obj[branch]).length; i++) {\r\n  //   c = 2;\r\n  //   r++;\r\n  //   console.log();\r\n\r\n  //   document.querySelector(`.c${c}.r${r}`).textContent = Object.keys(\r\n  //     obj[branch]\r\n  //   )[i];\r\n  // } -->\r\n\r\n<!-- html/nav structure options -->\r\n<!-- json, array, object, grid, table, list, mermaidjs ? -->\r\n<!-- could generate these grid items by parameterised calls to a component that makes #each html calls -->\r\n\r\n<!-- {#each x as y}{/each} -->\r\n\r\n<!--\r\n  // let branches = Object.keys(tree);\r\n  // console.log(branches);\r\n\r\n  // from https://stackoverflow.com/a/44134784\r\n  // const getObjRows = obj => {\r\n  //   return Object.keys(tree).reduce(function(r, k) {\r\n  //     return r.concat(k, tree[k]);\r\n  //   }, []);\r\n  // };\r\n\r\n  // console.log(\r\n  //   tree.flatMap(a =>\r\n  //     typeof a == \"object\" ? console.log(\"col-2\") : console.log(\"col-1\")\r\n  //   )\r\n  // );\r\n  // console.log(Object.keys(flatten(tree)));\r\n  // console.log(Object.entries(tree));\r\n  // console.log(flatten(tree).length);\r\n\r\n  // const flatTree = flatten(tree);\r\n  // } -->\r\n",
    "<style>\r\n  .spin-wrap {\r\n    display: grid;\r\n    place-content: center;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    /* font-size: 200%; */\r\n  }\r\n\r\n  .spin::after {\r\n    display: inline-block;\r\n    content: \"~\";\r\n    /* alt times 0.18s */\r\n    animation: spin 0.4s linear infinite alternate;\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      /* content: \"|\"; */\r\n      /* transform: rotate(0); */\r\n    }\r\n    25% {\r\n      /* content: \"\\\\\"; */\r\n      content: \"*\";\r\n      /* transform: skewX(100deg); */\r\n      /* transform: rotate(90deg); */\r\n    }\r\n    50% {\r\n      /* content: \"-\"; */\r\n      content: \"x\";\r\n      /* transform: skewX(200deg); */\r\n      /* transform: rotate(180deg); */\r\n    }\r\n    75% {\r\n      /* content: \"/\"; */\r\n      content: \"+\";\r\n      /* transform: skewX(100deg); */\r\n      /* transform: rotate(270deg); */\r\n    }\r\n    100% {\r\n      /* content: \"|\"; */\r\n      content: \"-\";\r\n      /* transform: skewX(360deg); */\r\n      /* transform: rotate(360deg); */\r\n    }\r\n  }\r\n</style>\r\n\r\n<br />\r\n<div class=\"spin-wrap\">\r\n  <div>\r\n    loading . . .\r\n    <span class=\"spin\" />\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  // import { createEventDispatcher } from \"svelte\";\r\n  // const dispatch = createEventDispatcher();\r\n  // const func = () => dispatch(\"eventname\", var/ref);\r\n\r\n  // query is 2-way bound between Search and Tree\r\n  // query is textContent\r\n  export let query;\r\n\r\n  // tries to stop select all bug\r\n  let cntrlDown = false;\r\n\r\n  // #cancel mouse-selection of query text\r\n  const queryMousedown = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // does this make no sense/ functionalise other stuff\r\n  // const toggleCntrl = (e) => e.key === 'Control' : cntrlDown = !cntrlDown\r\n\r\n  // watch from control key\r\n  const queryKeyup = e => {\r\n    if (e.key === \"Control\") {\r\n      // toggle global var\r\n      cntrlDown = false;\r\n    }\r\n  };\r\n\r\n  // #cancel special keys\r\n  const queryKeydown = e => {\r\n    console.log(e.key);\r\n    if (e.key === \"Control\") {\r\n      // toggle global var\r\n      cntrlDown = true;\r\n    }\r\n\r\n    if (\r\n      e.key === \"Enter\" ||\r\n      e.key === \"Control\" ||\r\n      e.key === \"ArrowLeft\" ||\r\n      e.key === \"ArrowRight\" ||\r\n      e.key === \"Delete\" ||\r\n      (e.key === \"Backspace\" && e.target.textContent.length === 1) ||\r\n      (cntrlDown &&\r\n        (e.key === \"a\" ||\r\n          e.key === \"A\" ||\r\n          e.key === \"Delete\" ||\r\n          e.key === \"Backspace\" ||\r\n          e.key === \"v\" ||\r\n          e.key === \"V\"))\r\n    ) {\r\n      e.preventDefault(); // will stop event bubbling --> stops key being pressed\r\n    }\r\n  };\r\n\r\n  // clicking on the body (not any specific elm could call positionCursor?)\r\n  // how do websites set the default mouse/focus place of a website?\r\n\r\n  // from https://www.geeksforgeeks.org/how-to-set-cursor-position-in-content-editable-element-using-javascript/\r\n  // warning: setting 'pointer-events' or 'user-select' to none undermines this function\r\n  const positionCursor = () => {\r\n    // relevant text-element\r\n    const tag = document.querySelector(\".query\");\r\n\r\n    if (tag.textContent.length !== 0) {\r\n      // Creates range object\r\n      const setpos = document.createRange();\r\n      // Creates object for selection\r\n      const set = window.getSelection();\r\n      // Set start position of range\r\n      setpos.setStart(tag.childNodes[0], tag.textContent.length);\r\n      // Collapse range within its boundary points\r\n      // Returns boolean\r\n      setpos.collapse(true);\r\n      // Remove all ranges set\r\n      set.removeAllRanges();\r\n      // Add range with respect to range object\r\n      set.addRange(setpos);\r\n      // Set cursor on focus\r\n      tag.focus();\r\n    } else {\r\n      console.log(tag.textContent.length);\r\n      // throw `err: ${tag.textContent.length}`;\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .omninav {\r\n    display: grid;\r\n    place-items: center;\r\n    background-color: var(--bg-color);\r\n    text-align: left;\r\n    width: 100%;\r\n    padding-left: 2rem;\r\n    padding-right: 2rem;\r\n  }\r\n\r\n  .search {\r\n    background-color: rgba(0, 0, 0, 0.69);\r\n    color: var(--primary-color);\r\n    display: inline;\r\n  }\r\n\r\n  .search-wrap {\r\n    width: 100%;\r\n    /* approx width of .tree (will change with string lengths tho smh) */\r\n    max-width: 28.5rem;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    padding-left: 0.2rem;\r\n    padding-right: 0.2rem;\r\n    outline: 1px solid white;\r\n    cursor: text;\r\n  }\r\n\r\n  .query {\r\n    outline: none;\r\n    caret-color: transparent;\r\n    /* user-select: none; */\r\n  }\r\n\r\n  .query::before {\r\n    content: \"$_:\";\r\n    display: inline;\r\n    color: var(--secondary-color);\r\n    padding-left: 0.15rem;\r\n  }\r\n\r\n  .query::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: 0.8rem;\r\n    height: 1.7rem;\r\n    margin-bottom: 0.08rem;\r\n    background-color: var(--primary-color);\r\n    vertical-align: middle;\r\n    animation: blink 1.6s ease-in-out infinite;\r\n  }\r\n\r\n  @keyframes blink {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n    20% {\r\n      opacity: 0.4;\r\n    }\r\n    40% {\r\n      opacity: 0;\r\n    }\r\n    60% {\r\n      opacity: 0.4;\r\n    }\r\n    80% {\r\n      opacity: 0.8;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"omninav\" on:click={positionCursor}>\r\n  <div class=\"search-wrap ow\">\r\n    <div class=\"search\" on:click={positionCursor}>\r\n      <span\r\n        class=\"query\"\r\n        contenteditable=\"true\"\r\n        spellcheck=\"false\"\r\n        bind:textContent={query}\r\n        on:click={positionCursor}\r\n        on:keydown={queryKeydown}\r\n        on:keyup={queryKeyup}\r\n        on:mousedown={queryMousedown} />\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--  // trick to join onMount and $:label's powers\r\n  // let mounted = false;\r\n  // runs after component is loaded into the DOM - could put like, a lot of code in here\r\n  // onMount(async () => {\r\n  //   mounted = true;\r\n  // });\r\n\r\n  // catch select all, press a key bug that overrides the first whitespace character (needed for clickable width)\r\n  // $: if (query && query.charAt(0) !== \" \") {\r\n  //   console.log(`'${query}'`);\r\n  //   query = \" \" + query;\r\n  //   console.log(`'${query.charAt(0)}'`);\r\n  // }\r\n   -->\r\n\r\n<!-- on:keypress={queryKeypress} -->\r\n<!-- on:keypress={console.log('keypress')} -->\r\n<!-- &nbsp; -->\r\n\r\n<!--\r\n  // count valid keypresses and restricts length\r\n  // only runs if key is not a special key\r\n  // forces search to remain single-line\r\n  const queryKeypress = e => {\r\n  // 21chars is max at 320px (i5)\r\n  // assume ~25-30% of clientWidth is not .query\r\n  // assume font-size: ~1rem\r\n  // 320 * 0.7 = 224\r\n  // 224 / 21 = ~10px per char\r\n  // use an equation between char size and omnibar width\r\n  let max = Math.floor(\r\n    (document.querySelector(\".navbar\").clientWidth * 0.666) / 10\r\n  );\r\n  console.log(max);\r\n  if (e.target.textContent.length > max) {\r\n    e.preventDefault();\r\n  }\r\n  };\r\n-->\r\n\r\n<!-- \r\n    // also an option from https://stackoverflow.com/a/7445389\r\n    // function SetEnd(txt) {\r\n      if (txt.createTextRange) {\r\n       //IE\r\n       var FieldRange = txt.createTextRange();\r\n       FieldRange.moveStart('character', txt.value.length);\r\n       FieldRange.collapse();\r\n       FieldRange.select();\r\n       }\r\n      else {\r\n       //Firefox and Opera\r\n       txt.focus();\r\n       var length = txt.value.length;\r\n       txt.setSelectionRange(length, length);\r\n      }\r\n    }\r\n  -->\r\n"
  ],
  "names": [],
  "mappings": "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"
}