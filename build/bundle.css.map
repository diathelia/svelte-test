{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Search.svelte",
    "..\\..\\Tree.svelte",
    "..\\..\\Spinner.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  /**** IDEA ****\r\n   * within positionCursor, use a try/catch to try postionCursor code, and if it fails, hard-reset query and queryDOM, to avoid multi-line errors?\r\n   */\r\n  import { onMount } from \"svelte\";\r\n  import { sQuery } from \"./store.js\";\r\n\r\n  let query;\r\n\r\n  // subscribe is one way: update sQuery, and query gets updated\r\n  //                       update query, and sQuery isnt updated\r\n  sQuery.subscribe(value => (query = value));\r\n\r\n  onMount(async () => {\r\n    const queryDOM = document.querySelector(\".query\");\r\n    const swrapDOM = document.querySelector(\".search-wrap\");\r\n\r\n    // use query-focus to trigger search-wrap pink outline\r\n    queryDOM.addEventListener(\"focus\", () => {\r\n      swrapDOM.style.outline = \"1px solid var(--secondary-color)\";\r\n    });\r\n\r\n    // use query-focusout to reset search-wrap to white outline\r\n    queryDOM.addEventListener(\"focusout\", () => {\r\n      swrapDOM.style.outline = \"1px solid white\";\r\n    });\r\n\r\n    // add hover-catchers to all of .omninav to trigger focus too\r\n\r\n    // on Search component load, set focus on search bar\r\n    // (svelte complained about the autofocus attribute)\r\n    queryDOM.focus();\r\n  });\r\n\r\n  $: if (query && !/^\\s/.test(query)) {\r\n    // debugger;\r\n    //MUST ADD MAPPING BACK TO STORE?\r\n    // IS MY ISSUE THAT THIS RUNS, CLEANS local query, leaving store query unsynced?\r\n    console.log(\"add cod here\");\r\n    // $sQuery = ` ${query.substring(1)}`;\r\n    // query = \" \";\r\n    // query = $sQuery;\r\n    // positionCursor();\r\n    // console.log(JSON.stringify(query));\r\n  }\r\n\r\n  // tries to stop select all bug\r\n  let cntrlDown = false;\r\n\r\n  // #cancel mouse-selection of query text\r\n  // const queryMousedown = e => {\r\n  //   e.preventDefault();\r\n  // };\r\n\r\n  // catch paste event and strip formatting\r\n  // const queryPaste = e => {\r\n  //   e.preventDefault();\r\n  //   let d = document.createElement(\"div\");\r\n  //   // let text = e.clipboardData.getData(\"text/plain\");\r\n  //   d.textContent = e.clipboardData.getData(\"text/plain\");\r\n  //   document.execCommand(\"insertText\", false, d.textContent);\r\n  // };\r\n\r\n  // watch from control key\r\n  const queryKeyup = e => {\r\n    if (e.key === \"Control\") {\r\n      // toggle global var\r\n      cntrlDown = false;\r\n    }\r\n  };\r\n\r\n  // #cancel special keys\r\n  const queryKeydown = e => {\r\n    // console.log(e.key);\r\n    if (e.key === \"Control\") {\r\n      // toggle global var\r\n      cntrlDown = true;\r\n    }\r\n\r\n    if (\r\n      e.key === \"Enter\" ||\r\n      e.key === \"Control\" ||\r\n      e.key === \"ArrowLeft\" ||\r\n      e.key === \"ArrowRight\" ||\r\n      e.key === \"Delete\" ||\r\n      (e.key === \"Backspace\" && e.target.textContent.length === 1) ||\r\n      (cntrlDown &&\r\n        // e.key === \"a\" ||\r\n        (e.key === \"A\" || e.key === \"Delete\" || e.key === \"Backspace\")) ||\r\n      e.key === \"v\" ||\r\n      e.key === \"V\"\r\n    ) {\r\n      e.preventDefault(); // will stop event bubbling --> stops key being pressed\r\n    }\r\n  };\r\n\r\n  // from https://www.geeksforgeeks.org/how-to-set-cursor-position-in-content-editable-element-using-javascript/\r\n  // warning: setting 'pointer-events' or 'user-select' to none undermines this function\r\n  const positionCursor = () => {\r\n    // relevant text-element\r\n    // note: needs to be fresh DOM reference\r\n    const tag = document.querySelector(\".query\");\r\n\r\n    if (tag.textContent.length !== 0) {\r\n      // Creates range object\r\n      const setpos = document.createRange();\r\n      // Creates object for selection\r\n      const set = window.getSelection();\r\n      // Set start position of range\r\n      setpos.setStart(tag.childNodes[0], tag.textContent.length);\r\n      // Collapse range within its boundary points\r\n      // Returns boolean\r\n      setpos.collapse(true);\r\n      // Remove all ranges set\r\n      set.removeAllRanges();\r\n      // Add range with respect to range object\r\n      set.addRange(setpos);\r\n      // Set cursor on focus\r\n      tag.focus();\r\n    } else {\r\n      console.log(\"error, text length =\", tag.textContent.length);\r\n      // throw `err: ${tag.textContent.length}`;\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .omninav {\r\n    display: grid;\r\n    place-items: center;\r\n    background-color: var(--bg-color);\r\n    text-align: left;\r\n    width: 100%;\r\n    padding-left: 2rem;\r\n    padding-right: 2rem;\r\n  }\r\n\r\n  .search {\r\n    color: var(--primary-color);\r\n    display: inline;\r\n  }\r\n\r\n  .search-wrap {\r\n    background-color: rgba(0, 0, 0, 0.69);\r\n    width: 100%;\r\n    /* approx width of .tree (will change with string lengths tho smh) */\r\n    max-width: 28.5rem;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    padding-left: 0.2rem;\r\n    padding-right: 0.2rem;\r\n    outline: 1px solid white;\r\n    cursor: text;\r\n    transition: outline 0.8s ease-in-out;\r\n  }\r\n\r\n  .query {\r\n    outline: none;\r\n    caret-color: transparent;\r\n    /* vertical-align: middle; */\r\n  }\r\n\r\n  .query::before {\r\n    content: \"$_:\";\r\n    display: inline;\r\n    color: var(--secondary-color);\r\n    padding-left: 0.15rem;\r\n  }\r\n\r\n  .query::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: 0.8rem;\r\n    height: 1.7rem;\r\n    margin-bottom: 0.15rem;\r\n    margin-left: 0.15rem;\r\n    background-color: var(--primary-color);\r\n    vertical-align: middle;\r\n    animation: blink 1.6s ease-in-out infinite;\r\n  }\r\n\r\n  @keyframes blink {\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n    20% {\r\n      opacity: 0.4;\r\n    }\r\n    40% {\r\n      opacity: 0;\r\n    }\r\n    60% {\r\n      opacity: 0.4;\r\n    }\r\n    80% {\r\n      opacity: 0.8;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"omninav\" on:click={positionCursor}>\r\n  <div class=\"search-wrap ow\">\r\n    <div class=\"search\" on:click={positionCursor}>\r\n      <span\r\n        class=\"query\"\r\n        contenteditable=\"true\"\r\n        spellcheck=\"false\"\r\n        bind:textContent={$sQuery}\r\n        on:click={positionCursor}\r\n        on:keydown={queryKeydown}\r\n        on:keyup={queryKeyup}\r\n        on:mousedown|preventDefault />\r\n      <!-- on:paste={queryPaste} -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--  // trick to join onMount and $:label's powers\r\n  // let mounted = false;\r\n  // runs after component is loaded into the DOM - could put like, a lot of code in here\r\n  // onMount(async () => {\r\n  //   mounted = true;\r\n  // });\r\n\r\n  // catch select all, press a key bug that overrides the first whitespace character (needed for clickable width)\r\n  // $: if (query && query.charAt(0) !== \"Â \") {\r\n  //   console.log(`'${query}'`);\r\n  //   query = \" \" + query;\r\n  //   console.log(`'${query.charAt(0)}'`);\r\n  // }\r\n   -->\r\n\r\n<!-- on:keypress={queryKeypress} -->\r\n<!-- on:keypress={console.log('keypress')} -->\r\n<!-- &nbsp; -->\r\n\r\n<!--\r\n  // count valid keypresses and restricts length\r\n  // only runs if key is not a special key\r\n  // forces search to remain single-line\r\n  const queryKeypress = e => {\r\n  // 21chars is max at 320px (i5)\r\n  // assume ~25-30% of clientWidth is not .query\r\n  // assume font-size: ~1rem\r\n  // 320 * 0.7 = 224\r\n  // 224 / 21 = ~10px per char\r\n  // use an equation between char size and omnibar width\r\n  let max = Math.floor(\r\n    (document.querySelector(\".navbar\").clientWidth * 0.666) / 10\r\n  );\r\n  console.log(max);\r\n  if (e.target.textContent.length > max) {\r\n    e.preventDefault();\r\n  }\r\n  };\r\n-->\r\n\r\n<!-- \r\n    // also an option from https://stackoverflow.com/a/7445389\r\n    // function SetEnd(txt) {\r\n      if (txt.createTextRange) {\r\n       //IE\r\n       var FieldRange = txt.createTextRange();\r\n       FieldRange.moveStart('character', txt.value.length);\r\n       FieldRange.collapse();\r\n       FieldRange.select();\r\n       }\r\n      else {\r\n       //Firefox and Opera\r\n       txt.focus();\r\n       var length = txt.value.length;\r\n       txt.setSelectionRange(length, length);\r\n      }\r\n    }\r\n  -->\r\n",
    "<script>\r\n  // wierd bug:\r\n  // on mobile, tree isnt matched until 3 characters are typed in (intermittent)\r\n  // real issue may be: mobile doesn't preserve the leading whitespace the same...\r\n  // maybe the key input is different?\r\n  // maybe i need to more strictly control the code-flow?\r\n  // maybe i need to check the core query-sanitising aspects of Search.svelte\r\n  // for features/methods etc that aren't supported/working on mobile\r\n\r\n  // import flatten from \"flat\";\r\n  import { onMount } from \"svelte\";\r\n  import { sTree } from \"./store.js\";\r\n\r\n  // get site tree (pre-parsed)\r\n  import tree from \"../public/tree.json\";\r\n\r\n  onMount(async () => {\r\n    // build DOM grid\r\n    await createGrid(tree);\r\n\r\n    // build tree onto DOM grid\r\n    await createTree(tree);\r\n  });\r\n\r\n  // build DOM grid from a nested array\r\n  const createGrid = array => {\r\n    const grid = document.querySelector(\".tree\");\r\n\r\n    // calculate numrows: (branches + subbranches) - branches\r\n    const numrows = array.flat(2).length - array.length;\r\n\r\n    // loop through rows\r\n    for (let i = 1; i <= numrows; i++) {\r\n      // create row columns\r\n      const a = document.createElement(\"div\");\r\n      const b = document.createElement(\"div\");\r\n      // add border and text resets\r\n      a.className = `c1 r${i} bb-0 bl-0 t-1`;\r\n      // add border resets\r\n      b.className = `c2 r${i} bb-0 bl-0`;\r\n      // add row to grid\r\n      grid.append(a, b);\r\n    }\r\n  };\r\n\r\n  // build DOM tree from a nested array\r\n  const createTree = array => {\r\n    // counters for columns and rows\r\n    // counter var is unnecessary until sub-sub-branches occur\r\n    // let c = 1;\r\n    let r = 1;\r\n\r\n    for (const branch of array) {\r\n      // save branch DOM node\r\n      const b = document.querySelector(`.c1.r${r}`);\r\n\r\n      // add ref to branch DOM node back into tree.json\r\n      branch.push(b);\r\n\r\n      // detect parent branch\r\n      if (typeof branch[1] === \"object\") {\r\n        // add parent branch name\r\n        b.textContent = branch[0];\r\n\r\n        // set to column 2 for subbranches loop\r\n        // c = 2;\r\n\r\n        for (const subbranch of branch[1]) {\r\n          // save subbranch DOM node\r\n          const sb = document.querySelector(`.c2.r${r}`);\r\n\r\n          // add ref to subbranch DOM node back into tree.json\r\n          subbranch.push(sb);\r\n\r\n          // detect if subbranch display value is text or a link and assign\r\n          sb.innerHTML = detectLink(subbranch);\r\n\r\n          // move down to next subbranch\r\n          r++;\r\n        }\r\n\r\n        // move one up\r\n        r--;\r\n\r\n        // add margin-bump to last subbranch of current branch\r\n        // replace with 'last subbranch' class?\r\n        document.querySelector(`.c2.r${r}`).style.marginBottom = \"1rem\";\r\n\r\n        // reset for new branch\r\n        // c = 1;\r\n        r++;\r\n      } else {\r\n        document.querySelector(`.c1.r${r}`).textContent = branch[0];\r\n        // reset for new branch\r\n        // c = 1;\r\n        r++;\r\n      }\r\n    }\r\n    // add DOM-infused tree to store.js\r\n    sTree.set(tree);\r\n  };\r\n\r\n  // returns a key-value pair as DOM string\r\n  // called from createTree to check if link or text\r\n  const detectLink = sb => {\r\n    if (sb[1].substring(0, 4) === \"http\") {\r\n      // set display value to a link href and use the key as the display text\r\n      // conditionalise if a external or local (ie to another page of the same website) link\r\n      // so that target=\"_blank\" only applies to externals? or just remove it?\r\n      return `<a class=\"t-1\" target=\"_blank\" href=\"${sb[1]}\">${sb[0]}</a>`;\r\n    } else {\r\n      // set display value to value\r\n      return `<p class=\"t-1\">${sb[0]}</p>`;\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .tree {\r\n    grid-gap: 0;\r\n    grid-template-columns: repeat(2, min-content);\r\n    background-color: var(--bg-color);\r\n    padding: 0 0.5rem;\r\n  }\r\n  /* moved tree branch styles from here into global.css to\r\n     stop them from getting compiled out as 'unused' */\r\n</style>\r\n\r\n<div class=\"wrap\">\r\n  <div class=\"tree grid-2\" />\r\n</div>\r\n",
    "<style>\r\n  .spin-wrap {\r\n    padding: 2rem 10rem;\r\n    background-color: blue;\r\n    display: grid;\r\n    place-content: center;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    position: relative;\r\n    /* font-size: 200%; */\r\n  }\r\n\r\n  .spin::after {\r\n    display: inline-block;\r\n    content: \"~\";\r\n    /* alt times 0.18s */\r\n    animation: spin 0.4s linear infinite alternate;\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      /* content: \"|\"; */\r\n    }\r\n    25% {\r\n      /* content: \"\\\\\"; */\r\n      content: \"*\";\r\n    }\r\n    50% {\r\n      /* content: \"-\"; */\r\n      content: \"x\";\r\n    }\r\n    75% {\r\n      /* content: \"/\"; */\r\n      content: \"+\";\r\n    }\r\n    100% {\r\n      /* content: \"|\"; */\r\n      content: \"-\";\r\n    }\r\n  }\r\n\r\n  .spin-2 {\r\n    transform: scale(5);\r\n    /* transform-origin: initial 25px; */\r\n    transform-origin: 50% 25px;\r\n    /* animation-fill-mode: forwards; */\r\n    /* animation: spinn 0.00001s linear infinite; */\r\n    /* animation: spinn 0.015s linear infinite; */\r\n    animation: spinn 4s linear infinite;\r\n  }\r\n\r\n  @keyframes spinn {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  /* .spin-2::after {\r\n    z-index: -1;\r\n    display: inline-block;\r\n    content: \"â´\";\r\n    color: red;\r\n    transform-origin: 0px 25px;\r\n    animation-fill-mode: forwards;\r\n    animation: spinnn 8s linear infinite;\r\n  }\r\n  @keyframes spinnn {\r\n    0% {\r\n      transform: rotate(-45deg);\r\n    }\r\n    100% {\r\n      transform: rotate(315deg);\r\n      color: white;\r\n    }\r\n  } */\r\n</style>\r\n\r\n<br />\r\n<div class=\"spin-wrap\">\r\n  <div>\r\n    loading . . .\r\n    <span class=\"spin\" />\r\n  </div>\r\n  <br />\r\n  <p class=\"spin-2\">â´</p>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}